[env]
PROFILES_DIR="profiles"

[tasks.check_env]
description = "環境変数がちゃんと設定されているか確認する"
quiet = true
hide = true
run = """
set -eu
if [ ! -e "{{env.MISE_CONFIG_ROOT}}/mise.local.toml" ]; then
  {
    echo '[env]'
    echo 'DEFAULT_CLAUDE_PROFILE=""'
  } > "{{env.MISE_CONFIG_ROOT}}/mise.local.toml"
  echo "🚨 '{{env.MISE_CONFIG_ROOT}}/mise.local.toml' に環境変数を設定する必要があります。"
  echo "🚨 必要な環境変数をデフォルトでセットしました。"
  echo "🚨 DEFAULT_CLAUDE_PROFILE=\"\" に適切なプロファイル名を設定してください。"
  exit 1
fi
if [ -z "${DEFAULT_CLAUDE_PROFILE:-}" ]; then
  echo "🚨 'DEFAULT_CLAUDE_PROFILE' を '{{env.MISE_CONFIG_ROOT}}/mise.local.toml' に設定してください。"
  exit 1
fi

# ~/.claude ディレクトリが存在しない場合は作成
if [ ! -d "${HOME}/.claude" ]; then
  mkdir -p "${HOME}/.claude"
fi
"""

[tasks.check]
description = "指定プロファイルが存在するかを確認し、なければエラーを返す"
depends = ["check_env"]
hide = true
quiet = true
run = """
PROFILE={{option(name="prof", default=env.DEFAULT_CLAUDE_PROFILE)}}
if [ -z "$PROFILE" ]; then
  echo "❌ Error: DEFAULT_CLAUDE_PROFILE is not set in environment variables" >&2
  exit 1
fi

PROFILE_PATH="{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}/$PROFILE"

if [ ! -d "$PROFILE_PATH" ]; then
  {
    echo "❌ Error: Profile directory '$PROFILE_PATH' does not exist"
    echo "   Available profiles:"
    if [ -d "{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}" ]; then
      ls -1 "{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}" | sed 's/^/   - /'
    else
      echo "   (No profiles directory found)"
    fi
  } >&2
  exit 1
fi
"""

[tasks.create_profile]
description = "新しいプロファイルを作成 (Usage: mise run create_profile <profile-name>)"
depends = ["check_env"]
run = """
PROFILE={{arg(name="prof")}}
if [ -z "$PROFILE" ]; then
  {
    echo "❌ Error: profile name is required."
    echo "   Usage: mise run create_profile <profile-name>"
  } >&2
  exit 1
fi

PROFILE_PATH="{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}/$PROFILE"
if [ -d "$PROFILE_PATH" ]; then
  echo "❌ Error: Profile '$PROFILE' already exists" >&2
  exit 1
fi

echo "🦄 Creating new Claude profile: $PROFILE"
mkdir -p "$PROFILE_PATH"

# デフォルト設定ファイル作成
cat > "$PROFILE_PATH/settings.json" << 'EOF'
{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(ls:*)",
      "Bash(cat:*)"
    ],
    "deny": [
      "Bash(sudo:*)",
      "Bash(rm -rf:*)",
      "Read(.env:*)",
      "Read(**/*token*)",
      "Read(**/secrets/**)"
    ],
    "defaultMode": "acceptEdits"
  },
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ]
  }
}
EOF

cat > "$PROFILE_PATH/settings.local.json" << 'EOF'
{
  "permissions": {
    "allow": [],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits"
  }
}
EOF

cat > "$PROFILE_PATH/CLAUDE.md" << 'EOF'
# Claude Instructions for this Profile

## Project Context
<!-- Describe the type of projects this profile is used for -->

## Preferred Tools and Libraries
<!-- List commonly used tools, frameworks, or libraries for this environment -->

## Code Style Guidelines
<!-- Specify any coding standards or preferences -->

## Environment-Specific Notes
<!-- Add any machine-specific or environment-specific instructions -->

## Restrictions
<!-- Note any specific restrictions or security considerations -->
EOF

echo "✅ Created profile '$PROFILE' at $PROFILE_PATH"
echo "📝 Edit settings in:"
echo "   - $PROFILE_PATH/settings.json"
echo "   - $PROFILE_PATH/settings.local.json"
echo "   - $PROFILE_PATH/CLAUDE.md"
"""

[tasks.link]
description = "指定プロファイルの設定ファイルをシンボリックリンクする"
depends = ["check_env"]
run = """
PROFILE={{option(name="prof", default=env.DEFAULT_CLAUDE_PROFILE)}}
mise run check --prof "$PROFILE"

PROFILE_PATH="{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}/$PROFILE"

echo "🦄 Linking Claude settings from profile: $PROFILE"

# 既存のシンボリックリンクを削除（ファイルの場合は退避）
for file in settings.json settings.local.json CLAUDE.md; do
  target="${HOME}/.claude/$file"
  if [ -L "$target" ]; then
    echo "   Removing existing symlink: $target"
    rm "$target"
  elif [ -f "$target" ]; then
    backup="${target}.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   既存のファイルをバックアップしました: $target -> $backup"
    mv "$target" "$backup"
  fi
done

# シンボリックリンク作成
for file in settings.json settings.local.json CLAUDE.md; do
  source="$PROFILE_PATH/$file"
  target="${HOME}/.claude/$file"

  if [ -f "$source" ]; then
    ln -sfv "$source" "$target"
  fi
done

echo "✅ Linked Claude settings from profile '$PROFILE'"
"""

[tasks.status]
description = "現在のプロファイル設定と~/.claudeの状態を確認"
depends = ["check_env"]
run = """
PROFILE={{option(name="prof", default=env.DEFAULT_CLAUDE_PROFILE)}}
PROFILE_PATH="{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}/$PROFILE"

echo "🦄 Claude Profile Status"
echo "Current profile: $PROFILE"
echo "Profile path: $PROFILE_PATH"
echo ""

if [ ! -d "$PROFILE_PATH" ]; then
  echo "❌ Profile directory does not exist"
  exit 1
fi

echo "📂 Profile files:"
for file in settings.json settings.local.json CLAUDE.md; do
  source="$PROFILE_PATH/$file"
  if [ -f "$source" ]; then
    echo "   ✅ $file"
  else
    echo "   ❌ $file (missing)"
  fi
done

echo ""
echo "🔗 Symlink status in ~/.claude:"
for file in settings.json settings.local.json CLAUDE.md; do
  target="${HOME}/.claude/$file"
  source="$PROFILE_PATH/$file"

  if [ -L "$target" ]; then
    link_target=$(readlink "$target")
    if [ "$link_target" = "$source" ]; then
      echo "   ✅ $file -> $source"
    else
      echo "   ⚠️  $file -> $link_target (不一致)"
    fi
  elif [ -f "$target" ]; then
    echo "   ❌ $file (通常ファイル、シンボリックリンクではない)"
  else
    echo "   ❌ $file (存在しない)"
  fi
done

echo ""
echo "💡 Commands:"
echo "   リンク作成/更新: mise run link --prof \"$PROFILE\""
echo "   プロファイル変更: mise run switch <profile-name>"
"""

[tasks.switch]
description = "プロファイルを切り替えてシンボリックリンクを更新 (Usage: mise run switch <profile-name>)"
depends = ["check_env"]
run = """
NEW_PROFILE={{arg(name="prof")}}
if [ -z "$NEW_PROFILE" ]; then
  {
    echo "❌ Error: profile name is required."
    echo "   Usage: mise run switch <profile-name>"
    echo ""
    echo "   Available profiles:"
    if [ -d "{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}" ]; then
      ls -1 "{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}" | sed 's/^/     - /'
    fi
  } >&2
  exit 1
fi

# プロファイル存在確認
mise run check --prof "$NEW_PROFILE"

# mise.local.toml の DEFAULT_CLAUDE_PROFILE を更新
LOCAL_CONFIG="{{env.MISE_CONFIG_ROOT}}/mise.local.toml"
if [ -f "$LOCAL_CONFIG" ]; then
  # DEFAULT_CLAUDE_PROFILE行を更新
  if grep -q "^DEFAULT_CLAUDE_PROFILE=" "$LOCAL_CONFIG"; then
    sed -i.bak "s/^DEFAULT_CLAUDE_PROFILE=.*/DEFAULT_CLAUDE_PROFILE=\"$NEW_PROFILE\"/" "$LOCAL_CONFIG"
    rm -f "$LOCAL_CONFIG.bak"
  else
    echo "DEFAULT_CLAUDE_PROFILE=\"$NEW_PROFILE\"" >> "$LOCAL_CONFIG"
  fi
else
  {
    echo '[env]'
    echo "DEFAULT_CLAUDE_PROFILE=\"$NEW_PROFILE\""
  } > "$LOCAL_CONFIG"
fi

echo "🦄 Switching Claude profile to: $NEW_PROFILE"

# シンボリックリンクを更新
mise run link --prof "$NEW_PROFILE"

echo "✅ Switched to profile '$NEW_PROFILE'"
echo "🔄 Please restart your shell or run 'mise env' to reload environment variables"
"""

[tasks.list]
description = "利用可能なプロファイル一覧を表示"
depends = ["check_env"]
run = """
PROFILES_DIR="{{env.MISE_CONFIG_ROOT}}/{{env.PROFILES_DIR}}"
CURRENT_PROFILE="${DEFAULT_CLAUDE_PROFILE:-}"

echo "🦄 Available Claude Profiles:"
if [ -d "$PROFILES_DIR" ]; then
  for profile in "$PROFILES_DIR"/*; do
    if [ -d "$profile" ]; then
      profile_name=$(basename "$profile")
      if [ "$profile_name" = "$CURRENT_PROFILE" ]; then
        echo "   ✅ $profile_name (current)"
      else
        echo "   ⭕ $profile_name"
      fi
    fi
  done
else
  echo "   (No profiles found)"
fi

if [ -n "$CURRENT_PROFILE" ]; then
  echo ""
  echo "Current profile: $CURRENT_PROFILE"
else
  echo ""
  echo "⚠️ No current profile set in DEFAULT_CLAUDE_PROFILE"
fi
"""
