\x1b[96mfind [オプション] 検索条件 ファイル名\x1b[m

ファイル名は複数指定できる。

\x1b[92m[オプション]\x1b[m
-i / --ignore-case            : 大文字と小文字の違いを無視する
-l                            : 検索条件を満たすファイル名のみを表示する
-c                            : 検索条件を満たすファイル名と一致した件数を表示する
--break                       : 検索結果をファイル毎に空行を入れて見やすく表示する
-n /--line-number             : 行番号を表示する
--column                      : 検索条件に一致する行の先頭から「最初に検索条件に一致する箇所の1始まりのバイトオフセット」を表示する
-[n] / -C [n] / --context [n] : 検索結果の前後 n 行を表示
-A [n] / --after-context [n]  : 検索結果の後 n 行を表示
-B [n] / --before-context [n] : 検索結果の前 n 行を表示
-- [filepath]                 : filepath 内のディレクトリを検索する
-- [:!filepath]               : filepath 内のディレクトリを以外を検索する。[:^filepath] でも良い
--and /--or / --not           : \x1b[92m-e 検索条件1 --and -e 検索条件2\x1b[m のようにして指定する。 --or は省略できる。

-G / --basic-regexp           : 検索条件に基本正規表現(BRE)を使用する。デフォルトはこれ。
-F / --fixed-strings          : 検索条件を正規表現ではなく、固定文字列として解釈する。
-E / --extended-regexp        : 検索条件に拡張正規表現(ERE)を使用する。

\x1b[92m検索条件\x1b[m

検索条件は上にあるようにデフォルトではBREとして解釈される。シェルが間違った解釈をしないように `"` や `'` で囲っておくと良い。

^     : 行の先頭
$     : 行の末尾
.     : 任意の 1 文字
*     : 直線の項目の 0 回以上の繰り返し
\     : 正規表現文字のエスケープ
[...] : []内の任意の 1 文字
        [abc]  : a, b, c のどれか1文字
        [^abc] : a, b, c 以外の1文字
        [a-n]  : aからnまでの1文字

ERE にすれば以下の正規表現も使用できる。
+     : 直線の項目の 1 回以上の繰り返し
?     : 直前の項目が 0 回または 1 回
{n}   : 直前の項目が n 回
{n,}  : 直前の項目が n 回以上
{,m}  : 直前の項目が m 回以下
{n,m} : 直前の項目が n 回以上 m 回以下
\<    : 単語の先頭にある空の文字列と一致
\>    : 単語の終わりにある空の文字列と一致

\x1b[92m左方最短一致と最長一致\x1b[m
.* .+ は最長一致、.*? .+? は左方最短一致になる。

\x1b[92m$ echo "<<<tag>>><<<tag>>>" | grep -E '<.*?>'\x1b[m   : `<<<tag>` が2箇所一致する(左方最短一致)
\x1b[92m$ echo "<<<tag>>><<<tag>>>" | grep -E '<.*>'\x1b[m    : `<<<tag>>><<<tag>>>` がまるまる一致する(最長一致)

(参考)
- \x1b[94mhttps://qiita.com/anqooqie/items/191ad215e93237c77811\x1b[m
- \x1b[94mhttps://future-architect.github.io/articles/20200611/\x1b[m
- \x1b[94mhttps://www.gnu.org/software/grep/manual/grep.html#Regular-Expressions\x1b[m
