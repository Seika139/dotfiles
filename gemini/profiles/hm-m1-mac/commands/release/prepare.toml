description = "最後の git タグからのコミットを分類し、CHANGELOG.md の Unreleased セクションを更新します"
prompt = '''
# Prepare CHANGELOG.md

現在のリポジトリの状況を把握した上で、CHANGELOG.md の `## [未リリース]` セクションを更新します。
以下の手順で実行してください。

`CHANGELOG.md` ファイルの存在を確認します。
現在のディレクトリがリポジトリのルートでない場合は、適宜 `cd` コマンドでルートに移動してください。

今日の日付は以下のコマンドで取得できます。
!{date +%Y-%m-%d`}

## Analyze Git History

最後のタグと対象となるコミットを分析します：

最後のタグは以下のコマンドで取得できます。
!{git describe --tags --abbrev=0 2>/dev/null}

最後のタグから現在の HEAD までのコミット履歴を以下のコマンドで取得します:
  git --no-pager log "$LATEST_TAG..HEAD" --pretty=format:'- %s'
ただし、1つもタグが存在しない場合は、リポジトリの最初のコミットから現在までの履歴を取得します。

## Create CHANGELOG.md if Missing

リポジトリルートに `CHANGELOG.md` が存在しない場合は、以下の `CHANGELOG.md` を作成します。

```markdown
# CHANGELOG

すべての注目すべき変更はこのファイルに記録されます。

フォーマットは [Keep a Changelog](https://keepachangelog.com/ja/1.0.0/) に基づいており、
このプロジェクトは [Semantic Versioning](https://semver.org/lang/ja/) に準拠しています。

## [未リリース]
```

## Edit CHANGELOG.md

`CHANGELOG.md` の `## [未リリース]` セクションを

- [Keep a Changelog](https://keepachangelog.com/ja/1.0.0/)
- [Semantic Versioning](https://semver.org/lang/ja/)

に基づいて更新します。

### Notes

- PR や Issue の番号は `[#123](github.com/your-repo/issues/123)` のようにリンク形式で記載してください。
- `CHANGELOG.md` には実装した詳細を書くのではなく、そのサービスを利用する人（ユーザー）から見たときにどのような機能追加・変更・修正があったのかを端的に記載してください。
- このコマンドは `CHANGELOG.md` のみを編集し、コミットやタグ付けは行いません。新しくバージョンや日付を追加しないでください。
- リスト項目は簡潔かつ統一的な表現で記載してください。
'''
